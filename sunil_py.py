# -*- coding: utf-8 -*-
"""sunil.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rK1ew08sqwwJ_P7VvjNI4O1BwySYykLE
"""

a=10
b=20
sol=a*a+b*b+2*a*b

print(sol)

#recursion on factorial
#when the function is calling itself again and again ==>Recursion (ittration )
def factorial(n):
  if n == 1:
   return 1
  else:
     return(n * factorial(n-1))

factorial(7)

def sum(n):
  if n<=1:
    return n
  else:
    return n + sum(n-1)


sum(5)



def sunil(first_name,last_name):
  print(first_name + " "+last_name) 
sunil("mehta", "kumar")

def sr(*name):
  print("my name is "+ name[-3])
sr("sunil","kumar","mehta")

def sr(name1,name2,name3):
  print("my name is"  +" "+  name3)
sr(name1="sunil",name2="kumar",name3="mehta")

def s(name):
  for i in name:
    print(name)
name = ["sunil","kumar","mehta","sun"]
s(name)

def s(n):
  return 5 * n
s(2<8)#boolien mathematical operation

#defination and calling 
#non paramerise function (not acceptany value )
#user defined function 
def sunil():
  print("hi i am being called by user defined function sr")#calling of function 
sunil()

def sunil(name): #parameter (name)[parameretise function ]
  print(name + "Cipher")
sunil("kumarmehta")

a= input()
b= input()
sum=a + b
print(sum)

a= int(input())
b= float(input())
c= complex(input())
q=a + b +c
print(q)

# pattern using nested loop
n=int(input())
for i in range(0,n):
  for j in range(0,i+1):
    print("*",end="")
  print()

import random 
li = []
for i in range(0,5):
  n=random.randint(1,10)
  li.append(n)
print(li)

# data type :tuple
#orded and unchangable
a=("sunil","kumar","mehta")
print(type(a))
print(len(a))
print(a)
print(a[1])

#set #another data type
#unchangable & unchangable
a={"sunil","kumar","mehta"}
print(a)

a={"sunil ","kumar","mehta"}
a.add("ambi")
print(a)

a={"sunil ","kumar","mehta"}
b={1,2,2,3}
c=a.union(b)
print(c)

#another datA type Dictonary
#ordered changable
a={
    "name":"sunil",
  "company":"SUNUFUN",
    "collage":"LPU" 
   
}
a["degree"] = "engineering"
print(a)

a={""}

#student=["sunil","kumar","mehta"]
#for i in student:
 # print(i)
student = ["sunil","kumar","mehta","tanush"]
for i in student:#index is indecated by (i)
  if i =="sunil":
    break
    print(i)

for i in range(1,22,5):# + - is used
  print(i)

#Nested for loop
student=["sunil","kumar","mehta"]
color=["red","blue","green"]
for i in student:
  for j in color:
    print(i,j)



i=1
while i < 5

import random 
print(random.random())

import random 
print(random.randint(1,5))

a="""name sunil kumar mehta  and   
 class representative   and 
 moniter sunil kumar mehta """
print(a)

#string operation 
#slicing 
#negative also used in the the value part 
b ="sunilkumarmehta "
print(b[4:5])

a ="sunil kumar mehta "
print(a.upper())

age = 40
sent ="my name is sunil kumar mehta  and age is {}"
print(sent.format(age))

#list 
col = ["sunil ","kumar","1","3"]
print(col)

#loop 
#I+=1 is = to i=i+1
i = 1
while i <10:
  print(i)
  i= i + 1

#loop 
#break
i = 1 
while i < 10:
  print(i) 
  if i == 3:
    break
    i = i+1

#Rock paper scissor 
#computrs choice
# c info cI
# user choice 
import random
print("welcom to the RPS game")
uC = input("Enter a either Rock or Paper or Scissor")
cC = ["Rock","Paper","scissor"]
cC = random.choice(cI)
print(cC)
if

if 

if

#list 
col = ["sunil ","kumar","1","3"]
col.append("class representative")
col.insert(2,"rakshit")
print(col)
print(type(col))

#conditational statments 
a=0 
b=20 
if a>=b:
  print("a is greater")
elif b>=a:
  print(" b is greater")
else:
  print("both are equal")

a=99
if a<33 and a>0:
   print("failed")
elif 90 < a < 100 :
  print("A+")
else :
  print("A should not be grater than 100")



#loop

#conditational statement
#logical error  comment
a=10
b=20 
if b > a:

  print("hi my name is sunil")

a=10
b=20
sol=a**2+b**2+a*b*2
print(sol)

#(a+b)2=a2+b2+2ab
a=10
b=20 
sol=pow(a,2)+pow(b,2)+2*a*b
print(sol)